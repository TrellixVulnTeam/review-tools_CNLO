= Test -h =
Running: snap-verify-declaration -h
usage: snap-verify-declaration [-h] [--json] [--plugs PLUGS] [--slots SLOTS]

Check a snap declaration for errors

optional arguments:
  -h, --help     show this help message and exit
  --json         print json output
  --plugs PLUGS  file specifying snap declaration for plugs
  --slots SLOTS  file specifying snap declaration for slots

RETURN CODES
  0     found no errors or warnings
  1     checks not run due to fatal error
  2     found only errors or errors and warnings
  3     found only warnings

Running: snap-verify-declaration --plugs=./plugs
{'error': {},
 'info': {'snap-declaration-verify_v2:valid_plugs:home:allow-auto-connection': {'manual_review': False,
                                                                                'text': 'OK'},
          'snap-declaration-verify_v2:valid_plugs:home:allow-connection': {'manual_review': False,
                                                                           'text': 'OK'},
          'snap-declaration-verify_v2:valid_plugs:home:allow-installation': {'manual_review': False,
                                                                             'text': 'OK'}},
 'warn': {}}

Running: snap-verify-declaration --json --plugs=./plugs
{
  "error": {},
  "info": {
    "snap-declaration-verify_v2:valid_plugs:home:allow-auto-connection": {
      "manual_review": false,
      "text": "OK"
    },
    "snap-declaration-verify_v2:valid_plugs:home:allow-connection": {
      "manual_review": false,
      "text": "OK"
    },
    "snap-declaration-verify_v2:valid_plugs:home:allow-installation": {
      "manual_review": false,
      "text": "OK"
    }
  },
  "warn": {}
}

Running: snap-verify-declaration --slots=./slots
{'error': {},
 'info': {'snap-declaration-verify_v2:valid_slots:mir:allow-auto-connection': {'manual_review': False,
                                                                               'text': 'OK'},
          'snap-declaration-verify_v2:valid_slots:mir:allow-connection': {'manual_review': False,
                                                                          'text': 'OK'},
          'snap-declaration-verify_v2:valid_slots:mir:allow-installation': {'manual_review': False,
                                                                            'text': 'OK'}},
 'warn': {}}

Running: snap-verify-declaration --json --slots=./slots
{
  "error": {},
  "info": {
    "snap-declaration-verify_v2:valid_slots:mir:allow-auto-connection": {
      "manual_review": false,
      "text": "OK"
    },
    "snap-declaration-verify_v2:valid_slots:mir:allow-connection": {
      "manual_review": false,
      "text": "OK"
    },
    "snap-declaration-verify_v2:valid_slots:mir:allow-installation": {
      "manual_review": false,
      "text": "OK"
    }
  },
  "warn": {}
}

Running: snap-verify-declaration --plugs=./plugs --slots=./slots
{'error': {},
 'info': {'snap-declaration-verify_v2:valid_plugs:home:allow-auto-connection': {'manual_review': False,
                                                                                'text': 'OK'},
          'snap-declaration-verify_v2:valid_plugs:home:allow-connection': {'manual_review': False,
                                                                           'text': 'OK'},
          'snap-declaration-verify_v2:valid_plugs:home:allow-installation': {'manual_review': False,
                                                                             'text': 'OK'},
          'snap-declaration-verify_v2:valid_slots:mir:allow-auto-connection': {'manual_review': False,
                                                                               'text': 'OK'},
          'snap-declaration-verify_v2:valid_slots:mir:allow-connection': {'manual_review': False,
                                                                          'text': 'OK'},
          'snap-declaration-verify_v2:valid_slots:mir:allow-installation': {'manual_review': False,
                                                                            'text': 'OK'}},
 'warn': {}}

Running: snap-verify-declaration --json --plugs=./plugs --slots=./slots
{
  "error": {},
  "info": {
    "snap-declaration-verify_v2:valid_plugs:home:allow-auto-connection": {
      "manual_review": false,
      "text": "OK"
    },
    "snap-declaration-verify_v2:valid_plugs:home:allow-connection": {
      "manual_review": false,
      "text": "OK"
    },
    "snap-declaration-verify_v2:valid_plugs:home:allow-installation": {
      "manual_review": false,
      "text": "OK"
    },
    "snap-declaration-verify_v2:valid_slots:mir:allow-auto-connection": {
      "manual_review": false,
      "text": "OK"
    },
    "snap-declaration-verify_v2:valid_slots:mir:allow-connection": {
      "manual_review": false,
      "text": "OK"
    },
    "snap-declaration-verify_v2:valid_slots:mir:allow-installation": {
      "manual_review": false,
      "text": "OK"
    }
  },
  "warn": {}
}

Running: snap-verify-declaration --plugs=./plugs
{'error': {}, 'info': {}, 'warn': {}}

Running: snap-verify-declaration --json --plugs=./plugs
{
  "error": {},
  "info": {},
  "warn": {}
}

Running: snap-verify-declaration --plugs=./plugs
ERROR: Could not read plugs: Expecting property name enclosed in double quotes: line 2 column 1 (char 2)

Running: snap-verify-declaration --json --plugs=./plugs
{
  "runtime-errors": {
    "error": {
      "msg": {
        "manual_review": true,
        "text": "Could not read plugs: Expecting property name enclosed in double quotes: line 2 column 1 (char 2)"
      }
    },
    "info": {},
    "warn": {}
  }
}

Running: snap-verify-declaration --plugs=./plugs
{'error': {'snap-declaration-verify_v2:valid_interface:nonexistent': {'manual_review': False,
                                                                      'text': 'interface '
                                                                              "'nonexistent' "
                                                                              'not '
                                                                              'found '
                                                                              'in '
                                                                              'base '
                                                                              'declaration'}},
 'info': {'snap-declaration-verify_v2:valid_plugs:nonexistent:allow-auto-connection': {'manual_review': False,
                                                                                       'text': 'OK'}},
 'warn': {}}

Running: snap-verify-declaration --json --plugs=./plugs
{
  "error": {
    "snap-declaration-verify_v2:valid_interface:nonexistent": {
      "manual_review": false,
      "text": "interface 'nonexistent' not found in base declaration"
    }
  },
  "info": {
    "snap-declaration-verify_v2:valid_plugs:nonexistent:allow-auto-connection": {
      "manual_review": false,
      "text": "OK"
    }
  },
  "warn": {}
}

Running: snap-verify-declaration --plugs=./plugs
{'error': {'snap-declaration-verify_v2:valid_plugs:mir:allow-auto-connection_plug-publisher-id': {'manual_review': False,
                                                                                                  'text': 'declaration '
                                                                                                          'malformed '
                                                                                                          '(unknown '
                                                                                                          'constraint '
                                                                                                          'key '
                                                                                                          "'plug-publisher-id')"}},
 'info': {},
 'warn': {}}

Running: snap-verify-declaration --json --plugs=./plugs
{
  "error": {
    "snap-declaration-verify_v2:valid_plugs:mir:allow-auto-connection_plug-publisher-id": {
      "manual_review": false,
      "text": "declaration malformed (unknown constraint key 'plug-publisher-id')"
    }
  },
  "info": {},
  "warn": {}
}

